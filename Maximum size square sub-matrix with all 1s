class Solution{
    static int maxSquare(int n, int m, int mat[][]){
        if(n==0 || m==0){
            return 0;}
            
        int [][] dp= new int [n+1][m+1];
        int ans=Integer.MIN_VALUE;
        
        
         for (int i = 0;i < n;i++) {
            dp[i][0] = mat[i][0];
        }
        for (int j = 0;j < m;j++) {
            dp[0][j] = mat[0][j];
        }
            
            
            for(int i=1; i<n; i++){
                for(int j=1; j<m; j++){
                    if(mat[i][j]==1){
                    dp[i][j]=1+Math.min(dp[i-1][j],Math.min(dp[i][j-1], dp[i-1][j-1]));
                    }
                    else{
                        dp[i][j]=0;
                    }
                    ans=Math.max(dp[i][j],ans);         //answer won't be obtained at dp[n][m] but can be found anywhere in the table so take max
                }
            }
        if (ans == Integer.MIN_VALUE){
            return 1;
        }
        else{
            return ans;
        }
        
    }
}
