class Solution{
	public int minimumCost(int cost[], int N,int W){
	    
		int [][] dp= new int [N+1][W+1];
		
		for(int i=0; i<N+1; i++){
		    for(int j=0; j<W+1; j++){
		        
		        if(i==0){
		            dp[i][j]=Integer.MAX_VALUE;
		        }
		        
		        if(j==0){
		            dp[i][j]=0;
		        }
		        
		    }
		}
		


        for (int i = 1; i <= N; i++){
            for (int j = 1; j <= W; j++){
             
                if (i <= j && cost[i - 1] != -1){
                    
                    if (dp[i][j - i] != Integer.MAX_VALUE){
                        dp[i][j] = Math.min(cost[i - 1] + dp[i][j - i], dp[i - 1][j]);}
                        
                    else{
                        dp[i][j] = dp[i - 1][j];}
                }
                
                else{
                    dp[i][j] = dp[i - 1][j];
                }
    		
            }}
        
        if (dp[N][W] != Integer.MAX_VALUE){
            return dp[N][W];}
            
        else{
            return -1;}
}}
