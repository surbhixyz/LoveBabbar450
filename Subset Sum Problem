class Solution{
    static int equalPartition(int N, int arr[]){
        int sum=0;
        for(int i=0; i<N; i++){
            sum+=arr[i];
        }
        
        if(sum%2!=0){
            return 0;
        }

        else{
            if(subsetSum(arr, N, sum/2)){
                return 1;
            }
           
        }
        
        return 0;
    }
    
    private static boolean subsetSum(int [] arr, int N, int sum){
        boolean [][] dp= new boolean [N+1][sum+1];
        for(int i=0; i<N+1; i++){
            for(int j=0; j<sum+1;j++){
                if(i==0){
                    dp[i][j]= false;
                }
                else if(j==0){
                    dp[i][j]=true;
                }
                else if(j>=arr[i-1]){
                    dp[i][j]=dp[i-1][j-arr[i-1]] || dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
                
            }
        }
        return dp[N][sum];
    }
}
