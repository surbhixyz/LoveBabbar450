class Solution{

    public int maximizeCuts(int n, int x, int y, int z){
        
      int [] dp= new int [n+1];
      for(int i=0; i<=n; i++){
          dp[i]=-1;
      }
      int ans =helper(n, x, y, z, dp);
      
      if(ans<0){
          return 0;
      }
      else{
          return ans;
      }
    }
    
    private static int helper(int n, int x, int y, int z, int [] dp){
        if(n==0){
            return 0;
        }
        if(n<0){
            return Integer.MIN_VALUE;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        
       
            int ans1=helper(n-x,x,y,z,dp);
            int ans2=helper(n-y,x,y,z,dp);
            int ans3=helper(n-z,x,y,z,dp);
            dp[n]=1+Math.max(ans1,Math.max(ans2,ans3));
            
            return dp[n];
    }
}
