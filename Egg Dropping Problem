class Solution { 
    
    public static int eggDrop(int n, int k) {
        int[][] dp= new int [201][201];
        for(int i=0; i<=n; i++){
            for(int j=0; j<=k; j++){
                dp[i][j]=-1;
            }
        }
      return helper(n,k,dp);
    }
   

   private static int helper(int n,int k, int [][]dp){
        
        if(k==0 || k==1){
            return k;
        }
        
        if(n==1){
            return k;
        }


        if(dp[n][k]!=-1){
            return dp[n][k];
        }
        
        
        int ans=Integer.MAX_VALUE;
        for(int i=1; i<=k; i++){
            int temp=1+Math.max(helper(n-1,i-1,dp),helper(n,k-i,dp));
            ans=Math.min(ans,temp);
        }
        dp[n][k]=ans;
        
        return ans;
         
    }
 
}
