class Solution {
    public int editDistance(String s, String t) {
        int n=s.length();
        int m=t.length();
        int dp[][] = new int[n+ 1][m + 1];
 
       
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j <= m; j++) {
               
                if (i == 0)
                    dp[0][j] = j; 
 
                
                else if (j == 0)
                    dp[i][0] = i; 
 
                
                else if (s.charAt(i - 1)== t.charAt(j - 1))
                    dp[i][j] = dp[i - 1][j - 1];        // Call for remaining string
 
                
                else
                    dp[i][j] = 1 + Math.min(dp[i][j - 1], // Insert
                                            Math.min(dp[i - 1][j], // Remove
                                                     dp[i - 1][j - 1])); // Replace
            }
        }
 
        return dp[n][m];
        
    }
}
